使用Xlib和Cairo libs制作屏幕截图: 
https://qa.1r1g.com/sf/ask/1085545191/

exp: Linux中如何查看显卡硬件信息（lshw/modinfo/glxinfo/OpenGL):
https://blog.csdn.net/dc3120/article/details/118194723?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-118194723-null-null.pc_agg_new_rank&utm_term=glxinfo%20linux&spm=1000.2123.3001.4430

GLFW简介: 
https://blog.csdn.net/momo0853/article/details/115691260
GLFW 简单入门学习:
https://blog.csdn.net/rgjtfc/article/details/83895842?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4-83895842-blog-115691260.pc_relevant_sortByStrongTime&spm=1001.2101.3001.4242.3&utm_relevant_index=7
(作为与SDL（参考《SDL 简单入门学习》）比较而写的两篇文章。这里也做个小结。相对来说，SDL真的将API做的很简单，而且因为使用的人比较多，所以第3方扩展也做的很好，并且，碰到问题，你比较容易找到答案。假如是做2D应用，SDL真的已经非常不错了。GLFW作为一个跨平台的OpenGL框架，也出色的完成了任务，不过因为定位不同，封装较少，所以在做一些基本任务的时候，因为OpenGL本身的复杂性，会复杂一些。同时，资料也少的多，所以我写本文花费的时间比SDL那篇就要长了很多，说明学习周期也会长一些。。。。(但是个人感觉类似GLFW,SDL这样的库，学习周期基本为0。。。。比起编写图形或者游戏的其他方面来说可以忽略不计）但是，同时的，GLFW封装的少，也带来更大的灵活性，我们可以还是自由的用OpenGL完成工作，也可以完成自己的进一步封装，相当于GLFW将跨平台的一些脏活累活都干了，我们就剩最核心的渲染去自由发挥了。碰到一个任务，该怎么在两者之间选择呢？出于简单考虑，2D方面的东西用SDL做实在再合适和简单不过了，但是假如想要学习OpenGL或者是做3D应用，GLFW的确是不错的选择。绝对比在glut上的投入要值，当然，其实因为glut实在太过简单，其实出于教学/学习目的去看一下也实在没有什么投入，实际用OpenGL开发东西的时候，还是选择用GLFW做吧。
    也许，下一步，我可以看看怎么在SDL中使用OpenGL。在Windows下，SDL的默认渲染API使用的是D3D，不知道是否可以更改，并且完全使用OpenGL来工作呢？)
https://github.com/glfw/glfw 

libusb使用指南:
https://blog.csdn.net/doublegalaxy/article/details/117960648
USB Virtual Host Controller Interface:
https://sourceforge.net/projects/usb-vhci/

Deskreen – 将任意设备变为你的电脑副屏: http://www.apprcn.com/deskreen.html
https://github.com/pavlobu/deskreen/issues/42
